{
  "copyright public": {
    "prefix": "public pal copyright",
    "body": [
      "// Copyright (c) ${1:year} PAL Robotics S.L. All rights reserved.",
      "//",
      "// Licensed under the Apache License, Version 2.0 (the \"License\");",
      "// you may not use this file except in compliance with the License.",
      "// You may obtain a copy of the License at",
      "//",
      "//     http://www.apache.org/licenses/LICENSE-2.0",
      "//",
      "// Unless required by applicable law or agreed to in writing, software",
      "// distributed under the License is distributed on an \"AS IS\" BASIS,",
      "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
      "// See the License for the specific language governing permissions and",
      "// limitations under the License.",
      ""
    ],
    "description": "pal public copyright snippet for python files"
  },
  "copyright private": {
    "prefix": "private pal copyright",
    "body": [
      "// Copyright (c) ${1:year} PAL Robotics S.L. All rights reserved.",
      "//",
      "// Unauthorized copying of this file, via any medium is strictly prohibited,",
      "// unless it was supplied under the terms of a license agreement or",
      "// nondisclosure agreement with PAL Robotics SL. In this case it may not be",
      "// copied or disclosed except in accordance with the terms of that agreement.",
      ""
    ]
  },
  "service ros": {
    "prefix": "ros service",
    "body": [
      "rclcpp::Service<${2:ServiceType}>::SharedPtr ${1:service_var_name} = node->create_service<${2:ServiceType}>(${3:service_topic_name}, &${4:binded_function_name});"
    ]
  },
  "client ros": {
    "prefix": "ros client",
    "body": [
      "rclcpp::Client<${2:ServiceType}>::SharedPtr ${1:client_var_name} = node->create_client<${2:ServiceType}>(${3:service_topic_name});"
    ]
  },
  "createaction": {
    "prefix": "create action server",
    "body": [
      "${1:#include <rclcpp_action/rclcpp_action.hpp>}",
      "rclcpp_action::Server<${3:ActionType}>::SharedPtr ${2:action_server_var_name} = rclcpp_action::create_server<${3:ActionType}>(",
      "this,",
      "\"{4:action_server_topic_name}\"",
      "std::bind(&${5:this_class_name}::handle_goal, this, _1, _2),",
      "std::bind(&${5:this_class_name}::handle_cancel, this, _1),",
      "std::bind(&${5:this_class_name}::handle_accepted, this, _1));"
    ]
  },
  "declarerosparam": {
    "prefix": "declare ros param",
    "body": [
      "this->declare_parameter<${2:type}>(\"${1:ros_param}\", ${3:default_value}); "
    ]
  },
  "getrosparam": {
    "prefix": "get ros param",
    "body": [
      "this->get_parameter(\"${1:ros_param}\", ${2:param_output_variable});"
    ]
  }
}
